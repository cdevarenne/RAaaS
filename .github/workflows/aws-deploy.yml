name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: raas

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscli

    - name: Package and deploy CloudFormation
      run: |
        aws cloudformation package \
          --template-file aws/cloudformation/raas-stack.yml \
          --s3-bucket ${{ env.PROJECT_NAME }}-cfn-templates \
          --output-template-file packaged-template.yml
        
        aws cloudformation deploy \
          --template-file packaged-template.yml \
          --stack-name ${{ env.PROJECT_NAME }}-stack \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides ProjectName=${{ env.PROJECT_NAME }}

    - name: Build and deploy React app
      run: |
        cd web/react-app
        npm install
        npm run build
        aws s3 sync build/ s3://${{ env.PROJECT_NAME }}-web-app

    - name: Update CloudFront distribution
      run: |
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name ${{ env.PROJECT_NAME }}-stack --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' --output text)
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
